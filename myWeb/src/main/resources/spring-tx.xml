<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns:aop="http://www.springframework.org/schema/aop"
xmlns:context="http://www.springframework.org/schema/context"
xmlns:tx="http://www.springframework.org/schema/tx"
xmlns:mvc="http://www.springframework.org/schema/mvc"
xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/aop
http://www.springframework.org/schema/aop/spring-aop.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context.xsd
http://www.springframework.org/schema/tx
http://www.springframework.org/schema/tx/spring-tx.xsd
http://www.springframework.org/schema/mvc
http://www.springframework.org/schema/mvc/spring-mvc.xsd">
    <!-- 配置事务管理器 -->
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	<!-- 配置事务的advice -->
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<!-- 所有以insert开头的方法，事务的传播特性为REQUIRED -->
			<!--
				1.propagation设置事务的传播行为，当前事务的方法被其他事物的方法调用时如何使用事务，默认：REQUIRED，即使用调用方法的事务
				REQUIRES_NEW:使用自己的事务，调用方法的事务被挂起
				2.isolation 指定事务的隔离级别，常用：READ_COMMITTED
				3.默认spring的事务队所有运行时异常进行回滚，也可以指定异常回滚no-rollback-for rollback-for
				4.read-only指定事务是否只读，表示这个事务只读取数据不更新数据，可以帮助数据库引擎优化事务
				5.timeout设置事务超时时间，超过timeout指定的值回滚
			-->
			<tx:method name="ins*" propagation="REQUIRED" isolation="READ_COMMITTED" />
			<tx:method name="del*" propagation="REQUIRED"/>
			<tx:method name="upd*" propagation="REQUIRED"/>
			<tx:method name="*" propagation="REQUIRED" read-only="true"/>
		</tx:attributes>
	</tx:advice>
	<!-- 配置事务AOP -->
	<aop:config>
		<aop:advisor advice-ref="txAdvice" pointcut="execution(* com.service.*.*.*(..))"  />
	</aop:config>
	<tx:annotation-driven transaction-manager="txManager" />
</beans>
